plugins {
    id 'org.jetbrains.intellij' version '0.3.12' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.2.51'
}

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8

    apply plugin: 'org.jetbrains.intellij'
}

intellij {
    version '2018.2'
    pluginName 'apeman'
}

group 'com.snyssfx.apeman'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.4'
    compile group: 'org.tensorflow', name: 'tensorflow', version: '1.13.1'
    compile group: 'org.tensorflow', name: 'proto', version: '1.13.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

patchPluginXml {
    changeNotes """0.0.1 add algo and metrics"""
}

//publishPlugin {
//    username intellijPublishUsername
//    password intellijPublishPassword
//}

task runProofOfConcept(dependsOn: runIde) {}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(runProofOfConcept)) {
        runIde.args 'proof-launcher'
        runIde.jvmArgs '-Djava.awt.headless=true', '-Xmx2048m'
    }
}

task runDatasetGenerator(dependsOn: runIde) {}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(runDatasetGenerator)) {
        runIde.args 'dataset_generator'
        runIde.jvmArgs '-Djava.awt.headless=true', '-Xmx2048m'
    }
}

tasks.withType(prepareSandbox) {
    from("../Models/model_tf_base") {
        into(intellij.pluginName + "/model_tf_base")
        include("*")
    }
}
